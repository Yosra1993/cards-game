{"version":3,"sources":["store/actions/index.js","components/CardsGame.js","components/BoardGame.js","containers/App.js","store/reducers/index.js","store/sagas/index.js","store/index.js","index.js"],"names":["changeNumberOfPairs","createAction","startGame","resetGame","shuffleCards","limitCards","duplicateCards","resetCards","flipAllCards","flipCard","changeWidth","CardsGame","props","dispatch","useDispatch","numberOfPairs","useSelector","rootReducer","numberOfFoundPairs","matching","cards","width","useEffect","Actions","setTimeout","alert","styled","div","ImageWrapper","color","defaultProps","PairesMenu","Option","Select","defaultValue","style","paddingLeft","onChange","value","handleWidth","Number","BoardGame","numberOfAttempts","Title","Typography","ControlContainer","title","bordered","bodyStyle","padding","headStyle","fontWeight","level","type","margin","onClick","AppContainer","App","className","justify","span","textAlign","paddingTop","sm","lg","clone","require","initialState","isLoading","clickCounter","matchingCard","src","isActive","handleActions","state","action","payload","isPlaying","array","i","length","j","Math","floor","random","temp","limitedCards","splice","duplicatedCards1","duplicatedCards2","newDuplicatedCards","forEach","el","index","match","flipedCards","timed","flippedCardIndex","findIndex","allCards","newCounter","firstFlippedCard","Object","assign","combineReducers","rootSaga","takeEvery","sagaMiddleware","createSagaMiddleware","store","middlewares","ReduxThunk","enhancers","applyMiddleware","composeEnhancers","composeWithDevTools","createStore","run","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a00b6c30.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const changeNumberOfPairs = createAction('CHANGE_NUMBER_OF_PAIRS');\nexport const startGame = createAction('START_GAME');\nexport const resetGame = createAction('RESET_GAME');\nexport const shuffleCards = createAction('SHUFFLE_CARDS');\nexport const limitCards = createAction('LIMIT_CARDS');\nexport const duplicateCards = createAction('DUPLICATE_CARDS');\nexport const resetCards = createAction('RESET_CARDS');\nexport const flipAllCards = createAction('FLIP_ALL_CARDS');\nexport const flipCard = createAction('FLIP_CARD');\nexport const changeWidth = createAction('CHANGE_WIDTH');\n","import React, { useEffect } from \"react\";\nimport * as Actions from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { QuestionOutlined } from \"@ant-design/icons\";\n\nexport default function CardsGame(props) {\n  const dispatch = useDispatch();\n  const numberOfPairs = useSelector(\n    ({ rootReducer }) => rootReducer.numberOfPairs\n  );\n  const numberOfFoundPairs = useSelector(\n    ({ rootReducer }) => rootReducer.numberOfFoundPairs\n  );\n  const cards = useSelector(({ rootReducer }) => rootReducer.cards);\n  const matching = useSelector(({ rootReducer }) => rootReducer.matching);\n  const width = useSelector(({ rootReducer }) => rootReducer.width);\n  useEffect(() => {\n    dispatch(Actions.resetCards());\n    dispatch(Actions.shuffleCards());\n    dispatch(Actions.limitCards());\n    dispatch(Actions.duplicateCards());\n    dispatch(Actions.shuffleCards());\n\n    setTimeout(() => {\n      dispatch(Actions.flipAllCards());\n    }, 5000);\n  }, [dispatch, numberOfPairs]);\n\n  useEffect(() => {\n    if (matching) {\n      setTimeout(() => {\n        dispatch(Actions.flipAllCards());\n      }, 1000);\n    }\n  }, [dispatch, matching]);\n\n  useEffect(() => {\n    if (numberOfFoundPairs === numberOfPairs) {\n      setTimeout(() => {\n        alert(\"YOU WIN \");\n      }, 500);\n    }\n  }, [numberOfFoundPairs, numberOfPairs]);\n\n  return (\n    //   grid Item\n    <GridContainer>\n      {cards.map((el, index) => {\n        // matching  and isActive\n        // matching and notActive\n        if (el.isActive || el.timed) {\n          return (\n            <ImageWrapper color=\"#1890FF\" width={width} key={\"div\" + index}>\n              <img\n                alt=\"img\"\n                key={el.src + index}\n                data-index={el.index}\n                src={el.src}\n              />\n            </ImageWrapper>\n          );\n        } else if (el.match) {\n          return (\n            <ImageWrapper\n              color=\"transparent\"\n              width={width}\n              key={\"div\" + index}\n            />\n          );\n        } else {\n          return (\n            <ImageWrapper\n              color=\"#1890FF\"\n              width={width}\n              key={\"div\" + index}\n              onClick={() => {\n                if (!matching) {\n                  dispatch(Actions.flipCard(el.index));\n                }\n              }}\n            >\n              <QuestionOutlined\n                style={{ fontSize: \"23px\", color: \" white\", marginTop: \"35%\" }}\n              />\n            </ImageWrapper>\n          );\n        }\n      })}\n    </GridContainer>\n  );\n}\n\nconst GridContainer = styled.div`\n  width: 554px;\n  height: 100vh;\n  text-align: center;\n  padding-top: 5%;\n`;\n\nconst ImageWrapper = styled.div`\n  display: inline-block;\n  margin-right: 7px;\n  margin-top: 2px;\n  border-radius: 4px;\n  width: ${(props) =>\n    useSelector(({ rootReducer }) => rootReducer.width) + \"px\"};\n  height: ${(props) =>\n    useSelector(({ rootReducer }) => rootReducer.width) + \"px\"};\n  background-color: ${(props) => props.color};\n\n  overflow: auto;\n  img,\n  .blank {\n    width: ${(props) =>\n      useSelector(({ rootReducer }) => rootReducer.width) + \"px\"};\n    height: ${(props) =>\n      useSelector(({ rootReducer }) => rootReducer.width) + \"px\"};\n    padding: 1px;\n  }\n`;\n\nImageWrapper.defaultProps = {\n  width: 125,\n};\n","import React from \"react\";\nimport * as Actions from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Typography } from \"antd\";\nimport { Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { Select } from \"antd\";\n\nconst PairesMenu = (props) => {\n  const dispatch = useDispatch();\n  const changeNumberOfPairs = (number) =>\n    dispatch(Actions.changeNumberOfPairs(number));\n  const { Option } = Select;\n\n  function handleChange(value) {\n    changeNumberOfPairs(value);\n    props.handleWidth(Number(value));\n  }\n  return (\n    <>\n      <Select\n        defaultValue=\"6\"\n        style={{ width: 120, paddingLeft: \"4px\" }}\n        onChange={handleChange}\n      >\n        <Option value=\"6\">6 Paires</Option>\n        <Option value=\"8\">8 Paires</Option>\n        <Option value=\"10\">10 Paires</Option>\n        <Option value=\"12\">12 Paires</Option>\n        <Option value=\"15\">15 Paires</Option>\n        <Option value=\"18\">18 Paires</Option>\n        <Option value=\"21\">21 Paires</Option>\n      </Select>\n    </>\n  );\n};\n\nexport default function BoardGame(props) {\n  const dispatch = useDispatch();\n\n  const resetGame = () => dispatch(Actions.resetGame());\n  const resetCards = () => dispatch(Actions.resetCards());\n  const shuffleCards = () => dispatch(Actions.shuffleCards());\n  const duplicateCards = () => dispatch(Actions.duplicateCards());\n  const limitCards = () => dispatch(Actions.limitCards());\n  const flipAllCards = () => dispatch(Actions.flipAllCards());\n  const changeWidth = (width) => dispatch(Actions.changeWidth(width));\n\n  const numberOfPairs = useSelector(\n    ({ rootReducer }) => rootReducer.numberOfPairs\n  );\n  const numberOfAttempts = useSelector(\n    ({ rootReducer }) => rootReducer.numberOfAttempts\n  );\n  const numberOfFoundPairs = useSelector(\n    ({ rootReducer }) => rootReducer.numberOfFoundPairs\n  );\n  const { Title } = Typography;\n\n  function handleWidth(value) {\n    switch (value) {\n      case 6: {\n        return changeWidth(127);\n      }\n      case 8: {\n        return changeWidth(127);\n      }\n      case 10: {\n        return changeWidth(102);\n      }\n      case 12: {\n        return changeWidth(85.33);\n      }\n      case 15: {\n        return changeWidth(85.33);\n      }\n      case 18: {\n        return changeWidth(85.33);\n      }\n      default: {\n        return changeWidth(73.42);\n      }\n    }\n  }\n  return (\n    <ControlContainer>\n      <Card\n        title=\"Score\"\n        bordered={false}\n        style={{ width: 300 }}\n        bodyStyle={{ padding: \"0px 24px\" }}\n        headStyle={{ fontWeight: \"bold\" }}\n      >\n        <Title level={3}>\n          <span style={{ color: \"#1890FF\" }}>{numberOfFoundPairs} </span> /{\" \"}\n          {numberOfPairs}\n        </Title>\n\n        <p>Tries: {numberOfAttempts}</p>\n      </Card>\n      <Card\n        title=\"Options\"\n        bordered={false}\n        style={{ width: 300 }}\n        bodyStyle={{ padding: \"0px 24px\" }}\n        headStyle={{ fontWeight: \"bold\" }}\n      >\n        <span>Size </span>\n        <PairesMenu handleWidth={handleWidth} />\n        <Button\n          type=\"primary\"\n          style={{ margin: \"20px auto\" }}\n          onClick={() => {\n            resetGame();\n            resetCards();\n            handleWidth(Number(numberOfPairs));\n            shuffleCards();\n            limitCards();\n            duplicateCards();\n            shuffleCards();\n            setTimeout(() => {\n              flipAllCards();\n            }, 1500);\n          }}\n        >\n          Restart Game\n        </Button>\n      </Card>\n    </ControlContainer>\n  );\n}\n\nconst ControlContainer = styled.div`\n  position: relative;\n  top: 17%;\n  transform: translateY(-25%);\n  padding: 30px;\n  background: #ececec;\n`;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport CardsGame from \"../components/CardsGame\";\nimport BoardGame from \"../components/BoardGame\";\nimport styled from \"styled-components\";\nimport { Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <AppContainer className=\"App\">\n      <Row justify=\"center\">\n        {\" \"}\n        <Col span={8}>\n          <Title\n            level={2}\n            style={{\n              padding: \"10px 0\",\n              textAlign: \"center\",\n              paddingTop: \"25px\",\n            }}\n          >\n            Find the pairs\n          </Title>\n        </Col>\n      </Row>\n      <Row justify=\"center\">\n        <Col sm={24} lg={11} >\n          <CardsGame />\n        </Col>\n        <Col sm={20} lg={7}>\n          <BoardGame />\n        </Col>\n      </Row>\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  background: #ececec;\n  height: 100vw;\n`;\n\nexport default App;\n","import { handleActions } from \"redux-actions\";\nimport * as Actions from \"../actions\";\nimport { combineReducers } from \"redux\";\n\nconst clone = require(\"rfdc\")();\n\nconst initialState = {\n  width: 127,\n  numberOfPairs: 6,\n  numberOfFoundPairs: 0,\n  numberOfAttempts: 0,\n  isLoading: true,\n  clickCounter: 0,\n  matching: false,\n  matchingCard: null,\n  cards: [\n    {\n      src: \"images/pair-1.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-2.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-3.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-4.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-5.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-6.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-7.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-8.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-9.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-10.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-11.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-12.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-13.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-14.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-15.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-16.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-17.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-18.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-19.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-20.jpg\",\n      isActive: false,\n    },\n    {\n      src: \"images/pair-21.jpg\",\n      isActive: false,\n    },\n  ],\n};\n\nconst rootReducer = handleActions(\n  {\n    [Actions.changeNumberOfPairs]: (state, action) => ({\n      ...state,\n      numberOfPairs: action.payload,\n    }),\n    [Actions.changeWidth]: (state, action) => {\n      return {\n        ...state,\n      width: action.payload,\n      }\n    },\n    [Actions.resetGame]: (state, action) => ({\n      ...initialState,\n      numberOfPairs: state.numberOfPairs,\n    }),\n    [Actions.startGame]: (state, action) => ({\n      ...state,\n      isPlaying: true,\n    }),\n    [Actions.resetCards]: (state, action) => ({\n      ...state,\n      cards: initialState.cards,\n    }),\n    [Actions.shuffleCards]: (state, action) => {\n      let array = state.cards;\n      let len = array.length - 1;\n      for (let i = len; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n      return {\n        ...state,\n        cards: [...array],\n      };\n    },\n    [Actions.limitCards]: (state, action) => {\n      let limitedCards = state.cards;\n      limitedCards.splice(state.numberOfPairs);\n      return {\n        ...state,\n        cards: [...limitedCards],\n      };\n    },\n    [Actions.duplicateCards]: (state, action) => {\n      let duplicatedCards1 = clone(state.cards);\n      let duplicatedCards2 = clone(state.cards);\n\n      let newDuplicatedCards = [...duplicatedCards1, ...duplicatedCards2];\n      newDuplicatedCards.forEach((el, index) => {\n        el.index = index;\n        el.isActive = true;\n        el.match = false;\n      });\n      return {\n        ...state,\n        cards: newDuplicatedCards,\n      };\n    },\n    [Actions.flipAllCards]: (state, action) => {\n      let flipedCards = state.cards;\n      flipedCards.forEach((el, index) => {\n        if (el.match === false) {\n          el.isActive = false;\n        } else if (el.match === true) {\n          el.timed = false;\n        }\n      });\n      return {\n        ...state,\n        cards: [...flipedCards],\n        matching: false,\n        isPlaying: true,\n      };\n    },\n    [Actions.flipCard]: (state, action) => {\n      let flippedCardIndex = state.cards.findIndex(\n        (el) => el.index === action.payload\n      );\n\n      let numberOfFoundPairs = state.numberOfFoundPairs;\n\n      let allCards = clone(state.cards);\n      // flip first card and remember it\n      if (state.clickCounter === 0) {\n        let newCounter = state.clickCounter;\n        newCounter++;\n\n        let allCards = clone(state.cards);\n\n        allCards.forEach((el) => {\n          if (el.index === action.payload) {\n            el.isActive = true;\n          }\n        });\n\n        let firstFlippedCard = allCards[flippedCardIndex];\n        return Object.assign({}, state, {\n          cards: [...allCards],\n          clickCounter: newCounter,\n          matchingCard: firstFlippedCard,\n        });\n      } else if (state.clickCounter === 1) {\n        let newCounter = 0;\n        let numberOfAttempts = state.numberOfAttempts;\n        numberOfAttempts++;\n\n        // flip Second Card\n        allCards.forEach((el) => {\n          if (el.index === action.payload) {\n            el.isActive = true;\n          }\n        });\n\n        // does the two cards match ?\n        if (state.matchingCard.src === allCards[flippedCardIndex].src) {\n          allCards.forEach((el) => {\n            if (el.src === state.matchingCard.src) {\n              el.match = true;\n              el.isActive = false;\n              el.timed = true;\n            }\n          });\n\n          numberOfFoundPairs++;\n        }\n\n        return {\n          ...state,\n          cards: [...allCards],\n          clickCounter: newCounter,\n          matching: true,\n          matchingCard: initialState.matchingCard,\n          numberOfFoundPairs,\n          numberOfAttempts,\n          isPlaying: false,\n        };\n      }\n    },\n  },\n  initialState\n);\n\nexport default combineReducers({ rootReducer });\n","import { takeEvery } from 'redux-saga/effects';\n\n// import * as Actions from '../actions';\n\nfunction changeNumberOfPairs(payload) {\n\treturn { type: 'CHANGE_NUMBER_OF_PAIRS', payload };\n  }\n\n  export function startGame(payload) {\n\treturn { type: 'START_GAME', payload };\n  }\n  \n  export function resetGame(payload) {\n\treturn { type: 'RESET_GAME', payload };\n  }\n  \n  export function shuffleCards(payload) {\n\treturn { type: 'SHUFFLE_CARDS', payload };\n  }\n  \n  export function limitCards(payload) {\n\treturn { type: 'LIMIT_CARDS', payload };\n  }\n  \n  export function duplicateCards(payload) {\n\treturn { type: 'DUPLICATE_CARDS', payload };\n  }\n  \n  export function resetCards(payload) {\n\treturn { type: 'RESET_CARDS', payload };\n  }\n  \n  export function flipAllCards(payload) {\n\treturn { type: 'FLIP_ALL_CARDS', payload };\n  }\n  \n  export function flipCard(payload) {\n\treturn { type: 'FLIP_CARD', payload };\n  }\n  export function changeWidth(payload) {\n\treturn { type: 'CHANGE_WIDTH', payload };\n  }\n\n\n\n  export default function* rootSaga() {\n    yield takeEvery('CHANGE_NUMBER_OF_PAIRS', changeNumberOfPairs);\n    yield takeEvery('START_GAME', startGame);\n    yield takeEvery('RESET_GAME', resetGame);\n    yield takeEvery('SHUFFLE_CARDS', shuffleCards);\n    yield takeEvery('LIMIT_CARDS', limitCards);\n    yield takeEvery('DUPLICATE_CARDS', duplicateCards);\n    yield takeEvery('RESET_CARDS', resetCards);\n    yield takeEvery('FLIP_ALL_CARDS', flipAllCards);\n    yield takeEvery('FLIP_CARD', flipCard);\n    yield takeEvery('CHANGE_WIDTH', changeWidth);\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport createSagaMiddleware from 'redux-saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [ReduxThunk, sagaMiddleware]\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    // other store enhancers if any\n  ]\n  const composeEnhancers = composeWithDevTools(\n    {\n      // other compose enhancers if any\n      // Specify here other options if needed\n    }\n  )\n  const store = createStore(rootReducer, initialState, composeEnhancers(...enhancers))\n  \n\n  sagaMiddleware.run(rootSaga)\n\n  return store\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport \"antd/dist/antd.css\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}